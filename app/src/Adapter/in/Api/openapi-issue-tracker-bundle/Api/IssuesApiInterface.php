<?php
/**
 * IssuesApiInterface
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * Issue tracking service
 *
 * Issue tracking service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Api;

use Symfony\Component\HttpFoundation\File\UploadedFile;
use OpenAPI\Server\Model\CreateIssue;
use OpenAPI\Server\Model\Issue;
use OpenAPI\Server\Model\IssueCreated;
use OpenAPI\Server\Model\ListIssue;
use OpenAPI\Server\Model\Time;

/**
 * IssuesApiInterface Interface Doc Comment
 *
 * @category Interface
 * @package  OpenAPI\Server\Api
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */
interface IssuesApiInterface
{

    /**
     * Operation issueIdGet
     *
     * Find issue by ID
     *
     * @param  int $id  ID of the issue to display (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\Issue
     *
     */
    public function issueIdGet($id, &$responseCode, array &$responseHeaders);

    /**
     * Operation issueIdPatch
     *
     * Update issue
     *
     * @param  int $id  ID of the issue to display (required)
     * @param  OpenAPI\Server\Model\Time $time  Time (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return void
     *
     */
    public function issueIdPatch($id, Time $time, &$responseCode, array &$responseHeaders);

    /**
     * Operation projectsProjectIdIssuesGet
     *
     * Lists project issues
     *
     * @param  int $projectId   (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\ListIssue[]
     *
     */
    public function projectsProjectIdIssuesGet($projectId, &$responseCode, array &$responseHeaders);

    /**
     * Operation projectsProjectIdIssuesPost
     *
     * Add a new issue to the project
     *
     * @param  int $projectId   (required)
     * @param  OpenAPI\Server\Model\CreateIssue $createIssue  Issue object (required)
     * @param  integer $responseCode     The HTTP response code to return
     * @param  array   $responseHeaders  Additional HTTP headers to return with the response ()
     *
     * @return OpenAPI\Server\Model\IssueCreated
     *
     */
    public function projectsProjectIdIssuesPost($projectId, CreateIssue $createIssue, &$responseCode, array &$responseHeaders);
}
